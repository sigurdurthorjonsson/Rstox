# Rstox version: 1.6.1 (latest alpha, 2017-06-28)
# R version: 3.3.2

# The package Rstox contains most of the functionality of the stock assesment utility StoX, which is an open source approach to acoustic and swept area survey calculations. Download Rstox from ftp://ftp.imr.no/StoX/Download/Rstox or install by running the following commands in R:

# Install the packages that Rstox depends on. Note that this updates all the specified packages to the latest (binary) version:
dep.pck <- c("data.table", "ggplot2", "MASS", "pbapply", "rgdal", "rgeos", "rJava", "sp", "XML")
install.packages(dep.pck, repos="http://cran.us.r-project.org", type="binary")

# Install Rstox:
install.packages("ftp://ftp.imr.no/StoX/Download/Rstox/Versions/Alpha/Rstox_1.6.1/Rstox_1.6.1.tar.gz", repos=NULL)

# Note that 64 bit Java is required to run Rstox
# On Windows, install Java from this webpage: https://www.java.com/en/download/windows-64bit.jsp, or follow the instructions found on ftp://ftp.imr.no/StoX/Tutorials/
# On Mac, getting Java and Rstox to communicate can be challenging. If you run into problems such as "Unsupported major.minor version ...", try the following:
# Update java, on
# 	http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html
# If this does not work install first the JDK and then the JRE:
# 	http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
# 	http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html
# You may want to check that the downloaded version is first in the list by running the following in the Terminal:
# 	/usr/libexec/java_home -V
# 	java -version
# Then run this in the Terminal.app:
# 	sudo ln -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# 	sudo R CMD javareconf
# Open R (close and then open if already open) and install rJava:
# 	install.packages('rJava', type='source')
# Then the installed Rstox should work.


# Release notes:
# 1. Fixed bug on Mac with rJava: Changed Sys.setenv(JAVA_HOME="") to if(Sys.getenv("JAVA_HOME")!="") Sys.setenv(JAVA_HOME="") in the onload() function.

# 2. Changed the output from runBootstrap() to TRUE (invisibly), instead of the bootstrap object, which can be memory consuming.

# 3. Removed the parameter 'par' of getBaseline(), which was used to uniquely select processes using the same function. This method was replaced by the following method: If more than one process use the same function, return data from that which has process name equal to the function name, and if such a process does not exist, return the first process with a warning.

# 4. Removed the parameter 'fun' of getBaseline(). The old method supported both the process name 'proc' and the function name 'fun' when specifying which process to get data from, but the new method only use one parameter 'proc'. The function now searces for a match in process name, and then in function name, picking the first process in the case of multiple matches, with a warning.

# 5. Removed the old functions bootstrapBioticAcoustic() and bootstrapBioticSweptArea().

# 6. Added the function wkt_MULTIPOLYGON(), adding support for lists of two column polygon matrices in polyArea().

# 7. Fixed bug in baseline2eca().
