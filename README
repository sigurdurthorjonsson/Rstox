# Rstox version: 1.6.3 (latest alpha, 2017-10-27)
# R version: 3.3.3

# The package Rstox contains most of the functionality of the stock assesment utility StoX, which is an open source approach to acoustic and swept area survey calculations. Download Rstox from ftp://ftp.imr.no/StoX/Download/Rstox or install by running the following commands in R:

# Install the packages that Rstox depends on. Note that this updates all the specified packages to the latest (binary) version:
dep.pck <- c("data.table", "ggplot2", "pbapply", "rgdal", "rgeos", "rJava", "sp", "XML")
install.packages(dep.pck, repos="http://cran.us.r-project.org", type="binary")

# Install Rstox:
install.packages("ftp://ftp.imr.no/StoX/Download/Rstox/Versions/Alpha/Rstox_1.6.3/Rstox_1.6.3.tar.gz", repos=NULL)

# Alternatively, install the latest development version from GitHub. Note that this does not garantee a stable version. For official versions of Rstox, refer to the ftp server ftp://ftp.imr.no/StoX/Download/Rstox/Versions/Alpha/Rstox_1.6.3 as described above. Install from github using the devtools package:
# devtools::install_github("Sea2Data/Rstox", ref="develop")

# Note that 64 bit Java is required to run Rstox
# On Windows, install Java from this webpage: https://www.java.com/en/download/windows-64bit.jsp, or follow the instructions found on ftp://ftp.imr.no/StoX/Tutorials/
# On Mac, getting Java and Rstox to communicate can be challenging. If you run into problems such as "Unsupported major.minor version ...", try the following:
# Update java, on
# 	http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html
# If this does not work install first the JDK and then the JRE:
# 	http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
# 	http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html
# You may want to check that the downloaded version is first in the list by running the following in the Terminal:
# 	/usr/libexec/java_home -V
# 	java -version
# Then run this in the Terminal.app:
# 	sudo ln -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# 	sudo R CMD javareconf
# Open R (close and then open if already open) and install rJava:
# 	install.packages('rJava', type='source')
# Then the installed Rstox should work.


# Release notes:

# 1. Added support in modifyBaselineParameters() used by runBaseline() for specifying StoX processes by their name only, and not Process(name_of_the_processs).

# 2. Modified the function getNMDinfo() to return data frames instead of matrices.

# 3. Added the function abbrevWords(), used when abbreviting survey time series and cruise series downloaded from NMD using getNMDdata(, abbrev=TRUE). 

# 4. Restructured the function getNMDdata(). Added the parameters subdir, which creates a directory inside the StoX projects directory in which to put multiple StoX projects (typically survey time series and cruise series), and abbrev, which abbreviates the StoX project names by the function abbrevWords() (using sub=-1 on years, ship names and other suffixes).

# 5. Updated the Test_Rstox project to the new R and R report structure (bootstrap and imputeByAge in R, and plots and reports in R report).

# 6. Changed the output from createProject(NULL) to return full paths of StoX projects located in the default workspace and sub directories.

# 7. Added the parameter 'msg' to createProject().

# 8. Changed the way Rstox recognizes StoX projects. From this version on StoX project names can be given either (i) by their full path, (ii) their name, in which case Rstox searches first in the default workspace and then in subdirectories, (iii) the path relative to the default workspace. This build support for organizing projects in the workspace in subdirectories.

# 9. Changed the output from createProject() to return a list of processes for the available templates.

# 10. Changed createProject("Test_Rstox") to autumatically use the example files for this particular project name. Also changed openProject("Test_Rstox") to create the project if missing. Thus there is no need to pre-create the test project. It is created when needed. Use createProject("Test_Rstox", ow=TRUE) to re-create the test project. This simplified the examples. 

# 11. Added support for creating a project directly from an URL of a zipped StoX project, either given as 'files' in createProject() (where the projectName can be specified), or as 'projectName', in which case the project name of the zipped project is used.

# 12. Added the function getRstoxVersion(), which returns the version of Rstox and the StoX Java library used by Rstox (and StoX).

# 13. Added the function downloadProjectZip(), which downloads a zipped project from an URL, used by createProject() and getNMDdata().

# 14. Added the function data.frame2ParTable(), which converts from a data.frame to a string as used by the StoX functions Catchability and *****

# 15. Added the function isProjectZipURL(), which returns TRUE for URLs containing "http" or "ftp" AND "zip".


